name: Build and Deploy

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build-and-deploy:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    # 캐시 사용을 위한 Maven 빌드
    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn -B clean package

    # dockerHub 로그인
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    # 도커 이미지 생성
    - name: Build Docker Image
      run: |
        docker build -t yoonshong/yaksok-docker-image .
        docker push yoonshong/yaksok-docker-image
      
    # 서버에서 Docker 이미지 실행
    - name: EC2 Docker Run
      uses: appleboy/ssh-action@master 
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        script: |
          docker rm -f $(docker ps -qa)
          docker rmi yoonshong/yaksok-docker-image
          docker pull yoonshong/yaksok-docker-image
          docker run -d -p 8080:8080 \
          -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
          -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          yoonshong/yaksok-docker-image:latest
